
SWITCH_TO_LED.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000012  00800100  0000015c  000001f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000015c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000001  00800112  00800112  00000202  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000202  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000234  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000028  00000000  00000000  00000270  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000089a  00000000  00000000  00000298  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007c5  00000000  00000000  00000b32  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000275  00000000  00000000  000012f7  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000034  00000000  00000000  0000156c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000003e4  00000000  00000000  000015a0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000018  00000000  00000000  00001984  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	60 c0       	rjmp	.+192    	; 0xc6 <__bad_interrupt>
   6:	00 00       	nop
   8:	5e c0       	rjmp	.+188    	; 0xc6 <__bad_interrupt>
   a:	00 00       	nop
   c:	5c c0       	rjmp	.+184    	; 0xc6 <__bad_interrupt>
   e:	00 00       	nop
  10:	5a c0       	rjmp	.+180    	; 0xc6 <__bad_interrupt>
  12:	00 00       	nop
  14:	58 c0       	rjmp	.+176    	; 0xc6 <__bad_interrupt>
  16:	00 00       	nop
  18:	56 c0       	rjmp	.+172    	; 0xc6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	54 c0       	rjmp	.+168    	; 0xc6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	52 c0       	rjmp	.+164    	; 0xc6 <__bad_interrupt>
  22:	00 00       	nop
  24:	50 c0       	rjmp	.+160    	; 0xc6 <__bad_interrupt>
  26:	00 00       	nop
  28:	4e c0       	rjmp	.+156    	; 0xc6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	4c c0       	rjmp	.+152    	; 0xc6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	4a c0       	rjmp	.+148    	; 0xc6 <__bad_interrupt>
  32:	00 00       	nop
  34:	48 c0       	rjmp	.+144    	; 0xc6 <__bad_interrupt>
  36:	00 00       	nop
  38:	46 c0       	rjmp	.+140    	; 0xc6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	44 c0       	rjmp	.+136    	; 0xc6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	42 c0       	rjmp	.+132    	; 0xc6 <__bad_interrupt>
  42:	00 00       	nop
  44:	40 c0       	rjmp	.+128    	; 0xc6 <__bad_interrupt>
  46:	00 00       	nop
  48:	3e c0       	rjmp	.+124    	; 0xc6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	3c c0       	rjmp	.+120    	; 0xc6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	3a c0       	rjmp	.+116    	; 0xc6 <__bad_interrupt>
  52:	00 00       	nop
  54:	38 c0       	rjmp	.+112    	; 0xc6 <__bad_interrupt>
  56:	00 00       	nop
  58:	36 c0       	rjmp	.+108    	; 0xc6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	34 c0       	rjmp	.+104    	; 0xc6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	32 c0       	rjmp	.+100    	; 0xc6 <__bad_interrupt>
  62:	00 00       	nop
  64:	30 c0       	rjmp	.+96     	; 0xc6 <__bad_interrupt>
  66:	00 00       	nop
  68:	2e c0       	rjmp	.+92     	; 0xc6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	2c c0       	rjmp	.+88     	; 0xc6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	2a c0       	rjmp	.+84     	; 0xc6 <__bad_interrupt>
  72:	00 00       	nop
  74:	28 c0       	rjmp	.+80     	; 0xc6 <__bad_interrupt>
  76:	00 00       	nop
  78:	26 c0       	rjmp	.+76     	; 0xc6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	24 c0       	rjmp	.+72     	; 0xc6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	22 c0       	rjmp	.+68     	; 0xc6 <__bad_interrupt>
  82:	00 00       	nop
  84:	20 c0       	rjmp	.+64     	; 0xc6 <__bad_interrupt>
  86:	00 00       	nop
  88:	1e c0       	rjmp	.+60     	; 0xc6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	ec e5       	ldi	r30, 0x5C	; 92
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 31       	cpi	r26, 0x12	; 18
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>

000000b2 <__do_clear_bss>:
  b2:	21 e0       	ldi	r18, 0x01	; 1
  b4:	a2 e1       	ldi	r26, 0x12	; 18
  b6:	b1 e0       	ldi	r27, 0x01	; 1
  b8:	01 c0       	rjmp	.+2      	; 0xbc <.do_clear_bss_start>

000000ba <.do_clear_bss_loop>:
  ba:	1d 92       	st	X+, r1

000000bc <.do_clear_bss_start>:
  bc:	a3 31       	cpi	r26, 0x13	; 19
  be:	b2 07       	cpc	r27, r18
  c0:	e1 f7       	brne	.-8      	; 0xba <.do_clear_bss_loop>
  c2:	07 d0       	rcall	.+14     	; 0xd2 <main>
  c4:	49 c0       	rjmp	.+146    	; 0x158 <_exit>

000000c6 <__bad_interrupt>:
  c6:	9c cf       	rjmp	.-200    	; 0x0 <__vectors>

000000c8 <CPU_Setup>:
unsigned char Keypad;

unsigned long Count = 0;

void CPU_Setup(){
	DDRB =0xff;
  c8:	8f ef       	ldi	r24, 0xFF	; 255
  ca:	87 bb       	out	0x17, r24	; 23
	DDRE = 0xff;
  cc:	82 b9       	out	0x02, r24	; 2
	DDRA = 0x00;
  ce:	1a ba       	out	0x1a, r1	; 26
  d0:	08 95       	ret

000000d2 <main>:
}
int main(void)
{
    CPU_Setup();
  d2:	fa df       	rcall	.-12     	; 0xc8 <CPU_Setup>
	
    while (1) 
    {
		Keypad = ~SWITCH;
  d4:	89 b3       	in	r24, 0x19	; 25
  d6:	80 95       	com	r24
  d8:	80 93 12 01 	sts	0x0112, r24	; 0x800112 <__data_end>
		FND_SEL = DGT[5];
  dc:	80 91 05 01 	lds	r24, 0x0105	; 0x800105 <__DATA_REGION_ORIGIN__+0x5>
  e0:	88 bb       	out	0x18, r24	; 24
		switch (Keypad) {
  e2:	80 91 12 01 	lds	r24, 0x0112	; 0x800112 <__data_end>
  e6:	88 30       	cpi	r24, 0x08	; 8
  e8:	f9 f0       	breq	.+62     	; 0x128 <main+0x56>
  ea:	38 f4       	brcc	.+14     	; 0xfa <main+0x28>
  ec:	82 30       	cpi	r24, 0x02	; 2
  ee:	a1 f0       	breq	.+40     	; 0x118 <main+0x46>
  f0:	84 30       	cpi	r24, 0x04	; 4
  f2:	b1 f0       	breq	.+44     	; 0x120 <main+0x4e>
  f4:	81 30       	cpi	r24, 0x01	; 1
  f6:	61 f5       	brne	.+88     	; 0x150 <main+0x7e>
  f8:	0b c0       	rjmp	.+22     	; 0x110 <main+0x3e>
  fa:	80 32       	cpi	r24, 0x20	; 32
  fc:	e9 f0       	breq	.+58     	; 0x138 <main+0x66>
  fe:	18 f4       	brcc	.+6      	; 0x106 <main+0x34>
 100:	80 31       	cpi	r24, 0x10	; 16
 102:	b1 f0       	breq	.+44     	; 0x130 <main+0x5e>
 104:	25 c0       	rjmp	.+74     	; 0x150 <main+0x7e>
 106:	80 34       	cpi	r24, 0x40	; 64
 108:	d9 f0       	breq	.+54     	; 0x140 <main+0x6e>
 10a:	80 38       	cpi	r24, 0x80	; 128
 10c:	e9 f0       	breq	.+58     	; 0x148 <main+0x76>
 10e:	20 c0       	rjmp	.+64     	; 0x150 <main+0x7e>
			case 0x01: FND_DB = FND[0]; break;
 110:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <FND>
 114:	83 b9       	out	0x03, r24	; 3
 116:	de cf       	rjmp	.-68     	; 0xd4 <main+0x2>
			case 0x02: FND_DB = FND[1]; break;
 118:	80 91 07 01 	lds	r24, 0x0107	; 0x800107 <FND+0x1>
 11c:	83 b9       	out	0x03, r24	; 3
 11e:	da cf       	rjmp	.-76     	; 0xd4 <main+0x2>
			case 0x04: FND_DB = FND[2]; break;
 120:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <FND+0x2>
 124:	83 b9       	out	0x03, r24	; 3
 126:	d6 cf       	rjmp	.-84     	; 0xd4 <main+0x2>
			case 0x08: FND_DB = FND[3]; break;
 128:	80 91 09 01 	lds	r24, 0x0109	; 0x800109 <FND+0x3>
 12c:	83 b9       	out	0x03, r24	; 3
 12e:	d2 cf       	rjmp	.-92     	; 0xd4 <main+0x2>
			case 0x10: FND_DB = FND[4]; break;
 130:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <FND+0x4>
 134:	83 b9       	out	0x03, r24	; 3
 136:	ce cf       	rjmp	.-100    	; 0xd4 <main+0x2>
			case 0x20: FND_DB = FND[5]; break;
 138:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <FND+0x5>
 13c:	83 b9       	out	0x03, r24	; 3
 13e:	ca cf       	rjmp	.-108    	; 0xd4 <main+0x2>
			case 0x40: FND_DB = FND[6]; break;
 140:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <FND+0x6>
 144:	83 b9       	out	0x03, r24	; 3
 146:	c6 cf       	rjmp	.-116    	; 0xd4 <main+0x2>
			case 0x80: FND_DB = FND[7]; break;
 148:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <FND+0x7>
 14c:	83 b9       	out	0x03, r24	; 3
 14e:	c2 cf       	rjmp	.-124    	; 0xd4 <main+0x2>
			default: FND_DB = FND[10]; break;
 150:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <FND+0xa>
 154:	83 b9       	out	0x03, r24	; 3
 156:	be cf       	rjmp	.-132    	; 0xd4 <main+0x2>

00000158 <_exit>:
 158:	f8 94       	cli

0000015a <__stop_program>:
 15a:	ff cf       	rjmp	.-2      	; 0x15a <__stop_program>
